# 문제 1
# 주어진 삼각형 경로의 최대값 찾기

triangle = [[7],
          [3, 8],
         [8, 1, 0],
        [2, 7, 4, 4],
       [4, 5, 2, 6, 5]]

def solution(tri):
    d = [[0] * i for i in range(1, len(tri) + 1)]
    d[0][0] = tri[0][0]

    for i in range(1, len(tri)):
        for j in range(i + 1):
            if j == 0:
                d[i][j] = tri[i][j] + d[i-1][0]
            elif j == i:
                d[i][j] = tri[i][j] + d[i-1][i-1]
            else:
                d[i][j] = tri[i][j] + max(d[i-1][j-1], d[i-1][j])
    
    return max(d[-1])

print(solution(triangle))

# 문제 2 - 등굣길
# m x n의 배열에서 지나갈 수 없는 좌표를 담은 2차원 배열 puddles을 피해
# 갈 수 있는 최단경로의 개수

m = 4
n = 3
puddles = [[2, 2]]

def solution2(m, n, pud):
    d = [[0] * m for _ in range(n)]
    d[0][0] = 1
    for i in range(n):
        for j in range(m):
            if i == 0 and j == 0:
                continue

            if [j + 1, i + 1] in pud:
                d[i][j] = 0
            else:
                d[i][j] = d[i-1][j] + d[i][j-1]
    return d[n-1][m-1]

print(solution2(m,n,puddles))

